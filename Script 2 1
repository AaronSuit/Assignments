#Setup nessessary libraries.  
#You will need to add some more based on how you will read the feature class you will use
#probably either arcpy or ArcGIS api for Python and Pandas

%matplotlib inline
import arcpy
import matplotlib
import numpy as np
import matplotlib.pyplot as plt






# Delete the cell above, but include the logic to build the same kind of data from one 
# column in a feature class.

#Specify which feature class you will use here (path)
fc = r"C:\Users\w935558\Desktop\Final\FinalData\FinalData.gdb\Question2Features"

#Specify which Column you will use here.
histo_field = "Longitude"


# Below here add the logic that will build a sequence of all the values
# in one column (field) of a feature class.  Then delete the cell above this.  
# if you name the variable that stores the sequence "x" you should not have to change
# of the code below this point.
valuelist = []
for value in arcpy.da.SearchCursor(fc, histo_field):
    valuelist.append(value)
    
print(valuelist)



def createHisto(data):
    
    #Put code here to create a histogram
    #plt.hist(data, num_bins, facecolor='blue', alpha=0.5)
    #return histogram

#This is the number of bins your histogram will have.  
#You may want to change this so keep it near this comment.
num_bins = 20

# the histogram of the data
n, bins, patches = plt.hist(valuelist, num_bins, facecolor='blue', alpha=0.5)
axes = plt.axes()
axes.set_ylim([0, 1.25])
axes.set_xlim([-86, -75])
plt.xlabel(histo_field)
plt.ylabel('Frequency')
plt.title(r'Histogram of : {0}'.format(histo_field))

# Tweak spacing to prevent clipping of ylabel
plt.subplots_adjust(left=0.15)
